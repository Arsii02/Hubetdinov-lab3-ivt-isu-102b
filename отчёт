Министерство науки и высшего образования Российской Федерации Федеральное государственное бюджетное образовательное учреждение высшего образования Уфимский университет науки и технологий
Кафедра АСУ
Отчет по лабораторной работе №3 по дисциплине «Основы современных цифровых технологий и искусственного интеллекта» на тему ««Диаграмма как код»
Выполнил: ст. гр. ИВТ-ИСУ-102б Хубетдинов А.И.
Уфа-2024

**Задание 1**

Алгори́тм (лат. algorithmi — от имени среднеазиатского математика Аль-Хорезми[1]) — совокупность точно заданных правил решения некоторого класса задач или набор инструкций, описывающих порядок действий исполнителя для решения определённой задачи.
Само слово «алгоритм» происходит от имени персидского (хорезмского и мавераннахрского) учёного аль-Хорезми. Около 825 года он написал сочинение Китаб аль-джебр валь-мукабала («Книга о сложении и вычитании»), из оригинального названия которого происходит слово «алгебра» (аль-джебр — восполнение). В этой книге впервые дал описание придуманной в Индии позиционной десятичной системы счисления. Персидский оригинал книги не сохранился. Аль-Хорезми сформулировал правила вычислений в новой системе и, вероятно, впервые использовал цифру 0 для обозначения пропущенной позиции в записи числа (её индийское название арабы перевели как as-sifr или просто sifr, отсюда такие слова, как «цифра» и «шифр»). Приблизительно в это же время индийские цифры начали применять и другие арабские учёные.

**Задание 2**

Блок-схема — это графическая модель, используемая для описания алгоритмов или процессов. Она состоит из различных символов, представляющих отдельные шаги, соединённых линиями, которые указывают направление последовательности действий. Рассмотрим основные элементы блок-схемы и их назначение.
1. Действие
Символ действия, обычно изображаемый в виде прямоугольника, представляет собой функцию обработки данных. Он обозначает выполнение определённой операции или группы операций, которые приводят к изменению значения, формы или размещения информации. Этот символ также может указывать на направление потока в зависимости от условий15.
2. Данные (ввод-вывод)
Символ данных, представленный в виде параллелограмма, используется для отображения ввода или вывода информации. Он не определяет конкретный носитель данных и служит для преобразования данных в форму, пригодную для обработки или отображения результатов24.
3. Предопределённый процесс (функция)
Этот символ обозначает предопределённый процесс, состоящий из одной или нескольких операций, которые определены в другом месте (например, в подпрограмме или модуле). В программировании это может быть вызов процедуры или функции14.
4. Вопрос (условие или решение)
Символ вопроса, обычно изображаемый в виде ромба, представляет собой условие с одним входом и несколькими выходами. После вычисления условия активируется один из выходов, что позволяет определить дальнейший путь выполнения алгоритма. Результаты вычислений могут быть записаны рядом с линиями, показывающими эти пути25.
Применение блок-схем
Блок-схемы широко используются в различных областях, таких как программирование, управление проектами и оптимизация бизнес-процессов. Они помогают визуализировать сложные процессы и делают их более понятными для анализа и отладки

**Задание 3**

Эволюция термина «схемы алгоритмов»
Термин «блок-схемы алгоритмов» со временем трансформировался в более упрощённое «схемы алгоритмов». Это изменение произошло по нескольким ключевым причинам:
1. Упрощение терминологии
С течением времени в информатике наблюдается тенденция к упрощению терминов для удобства и краткости. Использование выражения «схемы алгоритмов» стало более универсальным, охватывая не только графические представления, но и другие форматы описания алгоритмов, такие как текстовые и табличные.
2. Расширение применения
Блок-схемы нашли широкое применение в различных областях, таких как управление проектами, бизнес-процессы и образование. Это сделало термин более универсальным и способствовало его упрощению, так как теперь он может описывать разнообразные методы визуализации и представления алгоритмов.
3. Развитие технологий
С появлением новых методов визуализации, таких как псевдокод и различные языки программирования, акцент сместился с традиционных блок-схем на более широкие концепции схем алгоритмов. Это позволило разработчикам использовать более гибкие и адаптивные способы описания логики программ.

**Задание 4**

Workflow Diagram — это визуальное представление бизнес-процесса, которое иллюстрирует последовательность шагов и роли ответственных лиц за выполнение задач. Эти диаграммы упрощают понимание сложных процессов и помогают выявлять потенциальные проблемы или узкие места в работе.
Workflow Diagram и Flowchart (блок-схема) имеют много общего, так как обе используют стандартные символы для обозначения действий, решений и последовательности шагов. Однако Workflow Diagram чаще сосредоточен на бизнес-процессах и ролях участников, в то время как Flowchart может применяться для более широкого спектра задач, включая алгоритмы и программирование.

**Задание 5**

![пустая диаграмма drawio](https://github-production-user-asset-6210df.s3.amazonaws.com/)

**Задание 6**

Слово "Terminator" происходит от латинского "terminare", что означает "заканчивать". В культуре этот термин ассоциируется с персонажем из фильма Джеймса Кэмерона "Терминатор" (1984), кибернетическим убийцей, посланным из будущего для устранения матери будущего лидера сопротивления.
Связь с рисованием схем алгоритма
В схемах алгоритмов "terminator" обозначает начало и конец процесса, представляясь овальным символом. Это значение перекликается с культурным контекстом, так как оба термина символизируют завершение.
Связь с фильмами
Фильмы о Терминаторе, где Арнольд Шварценеггер исполнил главную роль, стали культовыми и исследуют темы искусственного интеллекта и борьбы человека с машиной. Они оказали значительное влияние на жанр научной фантастики и популярную культуру.

**Задание 7**

пустая диаграмм:
![простой алгоритм](https://github.com/user-attachments/assets)

**Задание 8**

Во всех форматах диаграмма отображается корректно. В формате png качество при приближении ухуджается.

**Задание 9**

html,xml форматах нельзя отобразить в markdown.

svg: 

![простой алгоритм drawio](https://github-production-user-asset-6210df.s3.amazonaws.com/67642784/376888963-5fbaff99-10b2-4fdb-870c-7862746be3f0.svg?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=AKIAVCODYLSA53PQK4ZA%2F20241022%2Fus-east-1%2Fs3%2Faws4_request&X-Amz-Date=20241022T171605Z&X-Amz-Expires=300&X-Amz-Signature=56842924374c6bb2b15dadf41f6fb820154fd546fb401197fe1b7c959aae3a48&X-Amz-SignedHeaders=host)

png:

![простой алгоритм](https://github-production-user-asset-6210df.s3.amazonaws.com/67642784/376881011-98277d2e-4dbc-48a9-b64c-8e7e95930f28.png?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=AKIAVCODYLSA53PQK4ZA%2F20241022%2Fus-east-1%2Fs3%2Faws4_request&X-Amz-Date=20241022T170311Z&X-Amz-Expires=300&X-Amz-Signature=c67365c2aabcfb60500a8d40c944adebb5a511aa32c4bc31cd83dd6e5fd3c635&X-Amz-SignedHeaders=host

**Задание 10**

svg формат отображается в браузере без потери качества:


![image](https://github.com/user-attachments/assets/5e059f34-cbac-4670-a404-3a3f2bd0fbbf)

в png формате:

![mermaid-diagram-2024-10-16-091641](https://github.com/user-attachments/assets/160f2f1c-013c-4e30-a6f2-f385a806b331)

**Задание 11**

![image](https://github.com/user-attachments/assets/e776c22c-888f-46d0-97bd-444ce85e0646)

**Задание 12**

Файл задание 14.md

**Задание 13**

![image](https://github.com/user-attachments/assets/85158102-1607-4df6-9fbf-826fd2f32ca7)

**Задание 14**

Multiline String (многострочная строка) — это строка текста, занимающая несколько строк кода. В Python многострочные строки создаются с помощью тройных кавычек (''' или """).
Base64 — это метод кодирования, который преобразует бинарные данные в текстовый формат с использованием 64 символов ASCII. Это позволяет безопасно передавать данные через текстовые каналы, такие как электронная почта и JSON.
Jupyter Notebook — веб-приложение для создания и обмена документами с живым кодом, уравнениями, визуализациями и текстом. Поддерживает множество языков программирования, включая Python.
Pyplot — модуль библиотеки Matplotlib для Python, который предоставляет функции для создания графиков и визуализации данных, упрощая процесс построения графиков.
String (строка) — последовательность символов, используемая для представления текста в программировании.
IPython — интерактивная оболочка для Python, предлагающая расширенные функции по сравнению со стандартной оболочкой, включая поддержку магических команд и улучшенное отображение данных.
UTF-8 — кодировка символов, представляющая любой символ в Unicode и являющаяся стандартом для веб-контента. Она совместима с ASCII и поддерживает множество языков.
ASCII (American Standard Code for Information Interchange) — кодировка символов, использующая 7 бит для представления текста на компьютерах. Она включает латинские буквы, цифры и специальные символы.
Matplotlib — библиотека для создания статических, анимационных и интерактивных визуализаций в Python, широко используемая в научных и аналитических приложениях.
URL (Uniform Resource Locator) — адрес ресурса в интернете, указывающий его местоположение и способ получения.

**Задание 15**

![image](https://github-production-user-asset-6210df.s3.amazonaws.com/67642784/376889694-211e9d05-6fa7-47ab-b00e-e20447a9492e.png?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=AKIAVCODYLSA53PQK4ZA%2F20241022%2Fus-east-1%2Fs3%2Faws4_request&X-Amz-Date=20241022T172023Z&X-Amz-Expires=300&X-Amz-Signature=833aa0f82d541f6742ac030e1a11a531fab37516a1e4fc27af73b7e7f060a055&X-Amz-SignedHeaders=host)

**Задание 16**

код программы:

![image](https://github.com/user-attachments/assets/8a85f6ab-a66a-4ef0-bd76-b73dfa769af1)

![image](https://github-production-user-asset-6210df.s3.amazonaws.com/67642784/376894677-9132bea4-16ce-4be1-9905-8c81cac141d4.png?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=AKIAVCODYLSA53PQK4ZA%2F20241022%2Fus-east-1%2Fs3%2Faws4_request&X-Amz-Date=20241022T172045Z&X-Amz-Expires=300&X-Amz-Signature=6763ee9ab52d357b8134f0ee1df61e0dbcb2d66e76bac99abe7a8963b4781db0&X-Amz-SignedHeaders=host)

**Задание 17**

Основная идея Base64 заключается в преобразовании бинарных данных в текстовый формат, который может быть безопасно передан через текстовые протоколы, такие как электронная почта или HTTP. Это кодирование позволяет представлять байты в виде последовательности символов, что делает данные более совместимыми с системами, которые могут не поддерживать 8-битные данные.
Число 64
Число 64 в названии Base64 указывает на количество символов, используемых в кодировке. Эти символы формируют алфавит Base64, который включает:
26 заглавных букв: A-Z (индексы 0-25)
26 строчных букв: a-z (индексы 26-51)
10 цифр: 0-9 (индексы 52-61)
2 специальных символа: + и / (индексы 62 и 63)
Таким образом, алфавит состоит из 64 уникальных символов. Это число удобно для кодирования, так как оно является степенью двойки (2^6 = 64), что позволяет эффективно группировать данные по 6 бит. Каждый символ в Base64 соответствует 6 битам исходных данных, что делает кодирование более компактным и удобным для передачи.

**Задание 18**

программа Docker на компьютере не работает( так как лицензия нужна, приходится без нее)

**Задание 19**

Название "Mermaid" может быть связано с мифологическим образом морской девы, представляющей собой существо с женской верхней частью тела и рыбьим хвостом. Этот образ часто ассоциируется с красотой, загадочностью и обольщением, что может отражать идеи визуализации и представления информации в графическом формате.
Возможные значения и смысл названия
Мифологический контекст: В мифологии морские девы (или сирены) часто изображаются как соблазнительницы, привлекающие моряков своим пением. Это может символизировать привлекательность и доступность информации, которую предоставляет инструмент Mermaid для создания диаграмм и графиков.
Визуальная метафора: Название "Mermaid" может также намекать на способность этого инструмента "плавать" между различными форматами данных и визуализациями, объединяя их в единое целое, подобно тому как морская дева соединяет миры воды и земли.
Простота и элегантность: Как и мифическая морская дева, сочетающая элементы красоты и тайны, Mermaid предлагает простой и элегантный способ для разработчиков визуализировать сложные концепции и структуры данных.

**Задание 20**

На странице проекта PlantUML на GitHub рядом с названием действительно присутствует изображение зеленого листочка. Это символ экологичности.

**Задание 21**

Mind map (умственная карта) — это визуальный инструмент, который помогает организовать и структурировать информацию. Основная идея заключается в том, чтобы представить центральную тему в центре карты и разветвлять ее на подтемы и идеи, что способствует лучшему пониманию и запоминанию информации.
Области применения умственных карт
1. Образование: Умственные карты используются для изучения, организации учебного материала и подготовки к экзаменам. Они помогают студентам лучше запоминать информацию и видеть связи между концепциями.
2. Бизнес: В бизнесе умственные карты применяются для планирования проектов, организации информации и мозговых штурмов. Они помогают командам визуализировать задачи и улучшать сотрудничество.
3. Личное развитие: Умственные карты могут использоваться для планирования личных целей, управления финансами и организации повседневных задач.
4. Креативное мышление: Они способствуют генерации идей и вдохновляют на новые концепции, позволяя пользователям быстро фиксировать мысли и связи между ними.
5. Проектирование пользовательского опыта: Умственные карты могут служить альтернативой блок-схемам при проектировании пользовательских интерфейсов, помогая визуализировать потоки пользователей и навигацию по приложениям или веб-сайтам.

**Задание 22**

Промт для чат бота:

Роль чат-бота: Вы являетесь карьерным консультантом, который помогает пользователям определить подходящие профессии на основе их навыков, интересов и целей.
Задача: Пожалуйста, задайте мне вопросы о моих интересах, навыках и опыте, чтобы помочь мне определить подходящую профессию. Учитывайте следующие аспекты:
1. Интересы: Какие области меня привлекают? (например, технологии, искусство, наука, бизнес и т.д.)
2. Навыки: Какие у меня есть навыки? (например, программирование, коммуникация, аналитическое мышление и т.д.)
3. Опыт: Какой у меня опыт работы или учебы? (например, стажировки, волонтерство, образование)
4. Цели: Какие у меня карьерные цели? (например, работа в крупной компании, собственный бизнес, работа на удаленке)
На основе полученной информации предложите мне одну или несколько профессий, которые могли бы мне подойти.

**Задание 23**

В статье Version Control на Википедии представлено графическое изображение истории версий программного проекта, которое иллюстрирует, как изменения в коде могут быть организованы и отслежены с помощью систем управления версиями.
Основные моменты о графическом представлении истории версий:
* Структура графа: Граф показывает, как различные версии проекта связаны друг с другом. Каждая вершина может представлять определенную версию или состояние проекта, а ребра показывают, как одна версия ведет к другой, * *  включая возможные ветвления и слияния.
*  Ветвление и слияние: Граф может демонстрировать ветвление, когда разработчики создают отдельные линии разработки для новых функций или исправлений. Это позволяет работать над несколькими аспектами проекта одновременно. Слияние происходит, когда изменения из разных веток объединяются в основную линию разработки.
*  Историчность изменений: Графическая схема помогает визуализировать последовательность изменений и их взаимосвязь, что облегчает понимание эволюции проекта и позволяет отслеживать, кто и когда внес изменения.

**Задание 24**

![image](https://github-production-user-asset-6210df.s3.amazonaws.com/67642784/376894677-9132bea4-16ce-4be1-9905-8c81cac141d4.png?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=AKIAVCODYLSA53PQK4ZA%2F20241022%2Fus-east-1%2Fs3%2Faws4_request&X-Amz-Date=20241022T172045Z&X-Amz-Expires=300&X-Amz-Signature=6763ee9ab52d357b8134f0ee1df61e0dbcb2d66e76bac99abe7a8963b4781db0&X-Amz-SignedHeaders=host)

**Задание 25**

![image](https://github.com/user-attachments/assets/b8c14442-b27e-44f8-a02b-6b6fd98e07ac)

**Задание 26**

![image](https://github-production-user-asset-6210df.s3.amazonaws.com/67642784/376899427-62de672b-88fc-4f39-a240-d162adc42271.png?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=AKIAVCODYLSA53PQK4ZA%2F20241022%2Fus-east-1%2Fs3%2Faws4_request&X-Amz-Date=20241022T173110Z&X-Amz-Expires=300&X-Amz-Signature=1986190fed6b597fbd4267a680bddafae5d15b1c56b063494d3a1fe4ff456d47&X-Amz-SignedHeaders=host)

**Задание 27**

@startmindmap
* Знания и умения 
** Основы программирования
*** Языки программирования (C++, Java, Python и др.)
*** Структурное и объектно-ориентированное программирование
** Алгоритмы и структуры данных
*** Основные алгоритмы (сортировка, поиск и др.)
*** Структуры данных (массивы, списки, деревья и графы)
** Системы управления базами данных
*** Основы SQL
*** Проектирование баз данных
** Операционные системы
*** Принципы работы ОС
*** Управление процессами и памятью
** Тестирование программного обеспечения
*** Методы тестирования
*** Инструменты для автоматизации тестирования
** Веб-технологии
*** Основы HTML, CSS, JavaScript
*** Разработка веб-приложений
** Инженерия программного обеспечения
*** Жизненный цикл разработки ПО
*** Методы проектирования и разработки
** Техническая документация
*** Оформление технической документации
*** Написание пользовательских инструкций
** Коммуникационные навыки
*** Работа в команде
*** Умение вести переговоры
** Основы экономики и управления
*** Экономика информационных технологий
*** Управление проектами
** Правила охраны труда и безопасности
*** Нормативные акты по охране труда
*** Безопасность при работе с компьютерами
@endmindmap

![image](https://github.com/user-attachments/assets/980cac77-671d-435d-9303-b7d100a75c4f)

**Задание 28**

![image](https://github-production-user-asset-6210df.s3.amazonaws.com/67642784/376902665-440e0457-2a64-4bde-8817-4280634b84f6.png?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=AKIAVCODYLSA53PQK4ZA%2F20241022%2Fus-east-1%2Fs3%2Faws4_request&X-Amz-Date=20241022T173217Z&X-Amz-Expires=300&X-Amz-Signature=9bcad9c5e9030f9f2544c9cb3ec257f85f44ff99f724145f70be03f318056795&X-Amz-SignedHeaders=host)

**Задание 29**

Yandex Wiki — это бесплатный сервис для создания базы знаний.

**Задание 30**

Термин "вики" (от английского "wiki") происходит от гавайского слова, которое переводится как "быстро". Впервые он был использован в 1995 году Уордом Каннингемом для описания системы WikiWikiWeb, позволяющей пользователям легко и быстро редактировать и создавать страницы. Название вдохновлено советом работника аэропорта Гонолулу воспользоваться "вики-вики шаттлом" — автобусом, который курсирует между терминалами.
Основная концепция проекта
Суть вики-систем заключается в том, что любой желающий может редактировать содержание сайта, что способствует совместному созданию и обмену знаниями. Это позволяет создавать динамичные и постоянно обновляемые ресурсы, такие как Википедия, где информация формируется и поддерживается сообществом.
Таким образом, название "вики" отражает основную идею проекта — быстрое и совместное создание контента.

**Задание 31**

![image](https://github.com/Arsii02/Hubetdinov-lab3-ivt-isu-102b/blob/main/%D0%A1%D0%BD%D0%B8%D0%BC%D0%BE%D0%BA%20%D1%8D%D0%BA%D1%80%D0%B0%D0%BD%D0%B0%202024-10-22%20224415.png)

